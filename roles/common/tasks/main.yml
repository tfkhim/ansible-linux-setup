# Private Ansible playbook
#
# Copyright (C) 2018 T. Himmelstoss
#
# This software may be freely distributed under the MIT license. You should
# have received a copy of the MIT License along with this program.

- name: Include distribution specific variables
  include_vars:
    file: '{{ansible_facts.os_family|lower}}.yml'

##############################################################################
# Install and configure OpenSSH
##############################################################################

# See: https://wiki.archlinux.org/index.php/OpenSSH

- name: Install OpenSSH package
  package:
    name: '{{openssh_packages}}'
    state: present

- name: Create a backup of sshd_config
  copy:
    remote_src: yes
    force: no
    src: /etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config.orig

- name: Set the SSH port
  lineinfile:
    path: /etc/ssh/sshd_config
    insertafter: '^#Port '
    line: 'Port {{sshd_port}}'

- name: Prohibit root login
  lineinfile:
    path: /etc/ssh/sshd_config
    insertafter: '^#PermitRootLogin '
    line: 'PermitRootLogin no'

- name: Prohibit password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    insertafter: '^#PasswordAuthentication '
    line: 'PasswordAuthentication no'

#TODO: Apply SSH hardening

##############################################################################
# Activate OpenSSH in Systemd
##############################################################################

- name: Include tasks for enabling automatic start
  include_tasks: 'openssh_{{ansible_facts.os_family|lower}}.yml'

##############################################################################
# Install and configure sudo
##############################################################################

- name: Install sudo package
  package:
    name: sudo
    state: present

- name: Allow users in 'wheel' group to use sudo
  copy:
    src: '{{sudo_group_file}}'
    dest: /etc/sudoers.d/
    owner: root
    group: root
    mode: u=r,g=r
    validate: /usr/sbin/visudo -csf %s
  when: sudo_group_file is defined

##############################################################################
# Install packages for improved usability
##############################################################################

- name: Install Bash completion package
  package:
    name: bash-completion
    state: present

##############################################################################
# Install and configure NTP
##############################################################################

- name: Enable systemd-timesynced service
  service:
    name: systemd-timesyncd
    enabled: yes
    state: started

##############################################################################
# Install CPU microcode package
##############################################################################

- name: Install microcode package
  package:
    name: '{{microcode_pkg}}'
    state: present
  when: microcode_pkg is defined

##############################################################################
# Install video acceleration packages
##############################################################################

- name: Install va-api package
  package:
    name: '{{va_api_pkg}}'
    state: present
  when: va_api_pkg is defined

- name: Set va-api variables to enable a specific driver
  template:
    src: va_api_config.sh.j2
    dest: /etc/profile.d/va_api_config.sh
  when: va_api_driver_name is defined and va_api_driver_path is defined

##############################################################################
# Install bluetooth support
##############################################################################

- name: Install bluez packages
  package:
    name:
      - bluez
      - bluez-utils
    state: present
  when: install_bluetooth is defined and install_bluetooth

- name: Activate bluetooth service
  service:
    name: bluetooth
    enabled: yes
    state: started
  when: install_bluetooth is defined and install_bluetooth

##############################################################################
# Create the default user and give him the needed permissions
##############################################################################

- name: Add '{{username}}' user
  user:
    name: '{{username}}'
    password: "{{password}}"
    state: present

- name: Add '{{username}}' to '{{sudo_group}}' group
  user:
    name: '{{username}}'
    groups: '{{sudo_group}}'
    append: yes

- name: Add '{{username}}' to 'lp' group
  user:
    name: '{{username}}'
    groups: lp
    append: yes

- name: Install public key for '{{username}}' user
  authorized_key:
    user: '{{username}}'
    state: present
    key: '{{public_key}}'
    exclusive: yes

